<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.calendar.dao.mapper.EventMapper">
  <resultMap id="BaseResultMap" type="org.example.calendar.dao.persistence.Event">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="calendar_id" jdbcType="BIGINT" property="calendarId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="start_datetime" jdbcType="TIMESTAMP" property="startDatetime" />
    <result column="end_datetime" jdbcType="TIMESTAMP" property="endDatetime" />
    <result column="is_all_day" jdbcType="BIT" property="isAllDay" />
    <result column="recurrence_rule" jdbcType="VARCHAR" property="recurrenceRule" />
    <result column="recurrence_end_date" jdbcType="DATE" property="recurrenceEndDate" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.example.calendar.dao.persistence.Event">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, calendar_id, title, location, start_datetime, end_datetime, is_all_day, recurrence_rule, 
    recurrence_end_date, created_by, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.example.calendar.dao.persistence.EventExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from calendar_events
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.example.calendar.dao.persistence.EventExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from calendar_events
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from calendar_events
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from calendar_events
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.example.calendar.dao.persistence.EventExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from calendar_events
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.example.calendar.dao.persistence.Event">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into calendar_events (id, calendar_id, title, 
      location, start_datetime, end_datetime, 
      is_all_day, recurrence_rule, recurrence_end_date, 
      created_by, created_at, updated_at, 
      description)
    values (#{id,jdbcType=BIGINT}, #{calendarId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{startDatetime,jdbcType=TIMESTAMP}, #{endDatetime,jdbcType=TIMESTAMP}, 
      #{isAllDay,jdbcType=BIT}, #{recurrenceRule,jdbcType=VARCHAR}, #{recurrenceEndDate,jdbcType=DATE}, 
      #{createdBy,jdbcType=BIGINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.example.calendar.dao.persistence.Event">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into calendar_events
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="calendarId != null">
        calendar_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="startDatetime != null">
        start_datetime,
      </if>
      <if test="endDatetime != null">
        end_datetime,
      </if>
      <if test="isAllDay != null">
        is_all_day,
      </if>
      <if test="recurrenceRule != null">
        recurrence_rule,
      </if>
      <if test="recurrenceEndDate != null">
        recurrence_end_date,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="calendarId != null">
        #{calendarId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="startDatetime != null">
        #{startDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="endDatetime != null">
        #{endDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isAllDay != null">
        #{isAllDay,jdbcType=BIT},
      </if>
      <if test="recurrenceRule != null">
        #{recurrenceRule,jdbcType=VARCHAR},
      </if>
      <if test="recurrenceEndDate != null">
        #{recurrenceEndDate,jdbcType=DATE},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.example.calendar.dao.persistence.EventExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from calendar_events
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update calendar_events
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.calendarId != null">
        calendar_id = #{row.calendarId,jdbcType=BIGINT},
      </if>
      <if test="row.title != null">
        title = #{row.title,jdbcType=VARCHAR},
      </if>
      <if test="row.location != null">
        location = #{row.location,jdbcType=VARCHAR},
      </if>
      <if test="row.startDatetime != null">
        start_datetime = #{row.startDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.endDatetime != null">
        end_datetime = #{row.endDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.isAllDay != null">
        is_all_day = #{row.isAllDay,jdbcType=BIT},
      </if>
      <if test="row.recurrenceRule != null">
        recurrence_rule = #{row.recurrenceRule,jdbcType=VARCHAR},
      </if>
      <if test="row.recurrenceEndDate != null">
        recurrence_end_date = #{row.recurrenceEndDate,jdbcType=DATE},
      </if>
      <if test="row.createdBy != null">
        created_by = #{row.createdBy,jdbcType=BIGINT},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.description != null">
        description = #{row.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update calendar_events
    set id = #{row.id,jdbcType=BIGINT},
      calendar_id = #{row.calendarId,jdbcType=BIGINT},
      title = #{row.title,jdbcType=VARCHAR},
      location = #{row.location,jdbcType=VARCHAR},
      start_datetime = #{row.startDatetime,jdbcType=TIMESTAMP},
      end_datetime = #{row.endDatetime,jdbcType=TIMESTAMP},
      is_all_day = #{row.isAllDay,jdbcType=BIT},
      recurrence_rule = #{row.recurrenceRule,jdbcType=VARCHAR},
      recurrence_end_date = #{row.recurrenceEndDate,jdbcType=DATE},
      created_by = #{row.createdBy,jdbcType=BIGINT},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      description = #{row.description,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update calendar_events
    set id = #{row.id,jdbcType=BIGINT},
      calendar_id = #{row.calendarId,jdbcType=BIGINT},
      title = #{row.title,jdbcType=VARCHAR},
      location = #{row.location,jdbcType=VARCHAR},
      start_datetime = #{row.startDatetime,jdbcType=TIMESTAMP},
      end_datetime = #{row.endDatetime,jdbcType=TIMESTAMP},
      is_all_day = #{row.isAllDay,jdbcType=BIT},
      recurrence_rule = #{row.recurrenceRule,jdbcType=VARCHAR},
      recurrence_end_date = #{row.recurrenceEndDate,jdbcType=DATE},
      created_by = #{row.createdBy,jdbcType=BIGINT},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.calendar.dao.persistence.Event">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update calendar_events
    <set>
      <if test="calendarId != null">
        calendar_id = #{calendarId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="startDatetime != null">
        start_datetime = #{startDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="endDatetime != null">
        end_datetime = #{endDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isAllDay != null">
        is_all_day = #{isAllDay,jdbcType=BIT},
      </if>
      <if test="recurrenceRule != null">
        recurrence_rule = #{recurrenceRule,jdbcType=VARCHAR},
      </if>
      <if test="recurrenceEndDate != null">
        recurrence_end_date = #{recurrenceEndDate,jdbcType=DATE},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.example.calendar.dao.persistence.Event">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update calendar_events
    set calendar_id = #{calendarId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      start_datetime = #{startDatetime,jdbcType=TIMESTAMP},
      end_datetime = #{endDatetime,jdbcType=TIMESTAMP},
      is_all_day = #{isAllDay,jdbcType=BIT},
      recurrence_rule = #{recurrenceRule,jdbcType=VARCHAR},
      recurrence_end_date = #{recurrenceEndDate,jdbcType=DATE},
      created_by = #{createdBy,jdbcType=BIGINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.calendar.dao.persistence.Event">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update calendar_events
    set calendar_id = #{calendarId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      start_datetime = #{startDatetime,jdbcType=TIMESTAMP},
      end_datetime = #{endDatetime,jdbcType=TIMESTAMP},
      is_all_day = #{isAllDay,jdbcType=BIT},
      recurrence_rule = #{recurrenceRule,jdbcType=VARCHAR},
      recurrence_end_date = #{recurrenceEndDate,jdbcType=DATE},
      created_by = #{createdBy,jdbcType=BIGINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>